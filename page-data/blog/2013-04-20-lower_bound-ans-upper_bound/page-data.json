{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2013-04-20-lower_bound-ans-upper_bound/","result":{"data":{"markdownRemark":{"html":"<ul>\n<li>Lower bound: first element that is greater-or-equal.</li>\n<li>Upper bound: first element that is strictly greater.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">+- lb(2) == ub(2)           +- lb(6)\n|        == begin()         |   +- ub(6) == end()\nV                           V   V\n+---+---+---+---+---+---+---+---+\n| 3 | 4 | 4 | 4 | 4 | 5 | 5 | 6 |\n+---+---+---+---+---+---+---+---+\n    ^               ^           ^\n    |               |           |\n    +- lb(4)        +- ub(4)    +- lb(9) = ub(9) == end()\n\n    |- eq-range(4) -|</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>As you can see, the half-open equal-range for <em>n</em> is [lb(<em>n</em>), ub(<em>n</em>)).</p>\n<p>Note that both bounds give you meaningful insertion locations for an element of the desired value so that the ordering is maintained, but <code class=\"language-text\">lower_bound</code> has the distinguishing feature that <em>if</em> the element already exists, then you get an iterator which actually points to that element. Thus you can use <code class=\"language-text\">lower_bound</code>on an ordered range to implement your own unique-membership <em>or</em> multiple-membership container.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">void insert(Container &amp;amp; c, T const &amp;amp; t)\n{\n    auto it = std::lower_bound(c.begin(), c.end(), t);\n\n    // if unique container:\n    if (it != c.end() &amp;amp;&amp;amp; *it == t) { /* error, element exists! */ return; }\n\n    c.insert(it, t);\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"Lower bound: first element that is greater-or-equal. Upper bound: first element that is strictly greater. Example: As you can see, the half-open equal-range for…","frontmatter":{"date":"20 April, 2013","path":"/blog/2013-04-20-lower_bound-ans-upper_bound/","title":"lower_bound ans upper_bound"},"fields":{"readingTime":{"text":"1 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}