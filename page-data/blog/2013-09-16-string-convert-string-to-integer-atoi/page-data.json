{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2013-09-16-string-convert-string-to-integer-atoi/","result":{"data":{"markdownRemark":{"html":"<p>Problem: Implement atoi function in C language and give the test cases. atoi function converts a string to an integer. The function prototype is as follows:</p>\n<pre>         int my_atoi(const char str[]);</pre>\n<p>Solution: The key is to be able to find out the int value of a numeric character.<br>\nASCII value of a numeric character - ASCII value of the character '0' = int value of numeric character.<br>\nEx: '8' - '0' = 8</p>\n<p>Code:</p>\n<pre>#define MIN_INT -2147483648\n#define MAX_INT 2147483647\n\nint my_atoi(const char str[])\n{\n    if(str == NULL) return 0;\n\n    int len = strlen(str);\n\n    if(len &lt;= 0) return 0;\n\n    int index = 0;\n\n    //skip leading spaces\n    while(str[index] == ' ') index++;\n\n    bool isNeg = str[index] == '-';\n    int outNum = 0;\n\n    if(isNeg)\n    {\n        index++;\n        // skip white space after the sign\n        while(str[index] == ' ') index++;\n    }\n\n    while(index &lt; len)\n    {\n        char currentChar = str[index++];\n        if(currentChar &gt;= '0' &amp;&amp; currentChar &lt;= '9')\n        {\n            int oldValue = outNum;\n            int charVal = currentChar - '0';\n            outNum *= 10;\n            outNum += charVal;\n\n            //overflow underflow detection\n            if(outNum &lt; oldValue)\n            {\n                if(isNeg)\n                    outNum = MIN_INT;\n                else\n                    outNum = MAX_INT;\n                return outNum;\n            }\n        }\n        else\n            break;\n    }\n    if(isNeg)\n        outNum = outNum * -1;\n    return outNum;\n}</pre>\n<p>atoi Test Cases:</p>\n<pre>Input         : Output\n\"\"            : 0\n\"0\"           : 0\n\"1\"           : 1\n\"-1\"          : -1\n\"10\"          : 10\n\"-10\"         : -10\n\"1234567890\"  : 1234567890\n\"23 45\"       : 23\n\" 99\"         : 99\n\" -66\"        : -66\n\"- 77\"        : -77\n\"55 \"         : 55\n\"-2147483648\" : -2147483648 (MIN)\n\"2147483647\"  : 2147483647  (MAX)\n\"2147483648\"  : 2147483647   (overflow)\n\"-2147483649\" : -2147483648  (underflow)\n\"abc*\"        : 0\n\"23ab\"        : 23\n\"23ab34\"      : 23\n\"b31\"         : 0</pre>\n<p>END</p>","excerpt":"Problem: Implement atoi function in C language and give the test cases. atoi function converts a string to an integer. The function prototype is as followsâ€¦","frontmatter":{"date":"16 September, 2013","path":"/blog/2013-09-16-string-convert-string-to-integer-atoi/","title":"[STRING] Convert String To Integer atoi()"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}