{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2013-09-16-string-palindrome-check/","result":{"data":{"markdownRemark":{"html":"<p>Problem: Find if a given string is a palindrome. Palindrome is a word or a phrase that reads the same in either direction.<br>\nEx: A man, a plan, a canal, panama!,  Nitin<br>\nPunctuation and spaces can be ignored.</p>\n<p>Solution: The solution is pretty straight forward and involves comparing the characters at both ends, incrementally moving towards the center of the string. This is similar logic we used for <a href=\"http://dev-interview-questions.blogspot.com/2008/12/string-reverse-in-place.html\">reversing a string</a> in place. The IsPalindrome method implemented below assumes that the string has been cleaned off of the punctuation characters and spaces.</p>\n<p>Code:</p>\n<pre>bool IsPalindrome(char str[])\n{\n    int len = strlen(str);\n\n    for(int i=0, j=len-1; i&lt;j; i++, j--)\n    {\n        if(str[i] != str[j])\n            return false;\n    }\n   return true;\n}</pre>\n<p>END</p>","excerpt":"Problem: Find if a given string is a palindrome. Palindrome is a word or a phrase that reads the same in either direction. Ex: A man, a plan, a canal, panama…","frontmatter":{"date":"16 September, 2013","path":"/blog/2013-09-16-string-palindrome-check/","title":"[STRING] Palindrome Check"},"fields":{"readingTime":{"text":"1 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}