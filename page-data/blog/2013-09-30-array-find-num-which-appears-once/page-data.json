{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2013-09-30-array-find-num-which-appears-once/","result":{"data":{"markdownRemark":{"html":"<p>Given an array of numbers, only one number appears once, others twice. Find the number.</p>\n<p>If there's only 1 number appearing once, it's actually easier. just use xor. The duplicate values cancel out since their xor is 0</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">int unique_number(const vector&amp;lt;int&amp;gt;&amp;amp; a) {\n\tint ans(0);\n\tfor (size_t i=0; i &amp;lt; a.size(); i++) \n\t\tans ^= a[i];\n\treturn ans;\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p> </p>\n<p>Let the number which occurs only once in the array be <code class=\"language-text\">x</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">x &amp;lt;- a[1]\nfor i &amp;lt;- 2 to n\n   x &amp;lt;- x ^ a[i]\nreturn x</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Since <code class=\"language-text\">a ^ a = 0</code> and <code class=\"language-text\">a ^ 0 = a</code></p>\n<p>Numbers which occur in pair cancel out and the result gets stored in <code class=\"language-text\">x</code></p>\n<p>Working code in C++</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">#include &amp;lt;iostream&amp;gt;\n\ntemplate&amp;lt;typename T, size_t N&amp;gt;\nsize_t size(T(&amp;amp;a)[N])\n{\n    return N;\n}\nint main()\n{\n   int a [] = {1,2,3,4,3,1,2};\n   int x = a[0];\n   for (size_t i = 1; i&amp;lt; size(a) ; ++i)\n   {\n      x = x ^ a[i];\n   }\n   std::cout &amp;lt;&amp;lt; x;\n} </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p> </p>\n<p>What if two numbers appear once, what if 500 numbers appear once. How to find these numbers.?</p>\n<p>I think hashes are definitely needed. Thus you find all numbers appeared once in O(n) time. Some quick example below (in Ruby):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">def find_single(ar)\n    num_hash = Hash.new(2)\n    ar.each do |n| \n        num_hash[n] -= 1\n        num_hash.delete(n) if num_hash[n] &amp;lt;= 0\n    end\n\n    return num_hash.keys\nend</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p> </p>\n<p><a href=\"http://www.sysexpand.com/?path=exercises/number-appearing-once-in-array\">http://www.sysexpand.com/?path=exercises/number-appearing-once-in-array</a></p>\n<p>END</p>","excerpt":"Given an array of numbers, only one number appears once, others twice. Find the number. If there's only 1 number appearing once, it's actually easier. just use…","frontmatter":{"date":"30 September, 2013","path":"/blog/2013-09-30-array-find-num-which-appears-once/","title":"[ARRAY] Find Num which Appears Once"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}