{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2014-01-06-number-of-bus-stations/","result":{"data":{"markdownRemark":{"html":"<p>At a bus-station, you have time-table for buses arrival and departure. You need to find the minimum number of platforms so that all the buses can be accommodated as per their schedule.</p>\n<p><a href=\"https://rameshnagaraj.files.wordpress.com/2014/01/9705e-bus-1.gif\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5617572055676903538\" src=\"{{ site.baseurl }}/assets/9705e-bus-1.gif?w=300\"/></a>____</p>\n<p><strong>Example:</strong> Time table is like below:</p>\n<blockquote>\n<pre><b>Bus</b>         <b>Arrival</b>         <b>Departure</b> \nBusA        0900 hrs        0930 hrs\nBusB        0915 hrs        1300 hrs\nBusC        1030 hrs        1100 hrs\nBusD        1045 hrs        1145 hrs</pre>\n</blockquote>\n<p>Then the answer must be 3. Otherwise the bus-station will not be able to accommodate all the buses.</p>\n<p><strong>Answer:</strong><br>\nLet’s take the same example as described above. Now if we apply dynamic programming and calculate the number of buses at station at any time (when a bus comes or leaves). Maximum number in that pool will be nothing but the maximum number of buses at the bus-station at any time, which is same as max number of platforms required.</p>\n<p>So first sort all the arrival(A) and departure(D) time in an int array. Please save the corresponding arrival or departure in the array also. Either you can use a particular bit for this purpose or make a structure. After sorting our array will look like this:</p>\n<blockquote>\n<pre>0900    0915    1930    1030    1045    1100    1145    1300\nA       A       D       A       A       D       D       D</pre>\n</blockquote>\n<p>Now modify the array as put 1 where you see A and -1 where you see D. So new array will be like this:</p>\n<blockquote>\n<pre>1       1       -1      1       1       -1      -1      -1</pre>\n</blockquote>\n<p>And finally make a cumulative array out of this:</p>\n<blockquote>\n<pre>1       2       1       2       3       2       1       0</pre>\n</blockquote>\n<p>Your solution will be the maximum value in this array. Here it is 3.</p>\n<p>I think that code for this will not be complex so I am skipping that part. The complexity of this solution depends on the complexity of sorting.</p>\n<p><strong>PS:</strong> If you have a arriving and another departing at same time then put departure time first in sorted array.</p>\n<div></div>\n<div><b>Further Thoughts:</b>&nbsp;You don not need to create a cumulative array or an array with 1 and -1; you just need a counter (cnt) initialized at '0'. Whenever, you find an 'A' in arrival-departure array, increment cnt by 1. Compare it with maximum value (max); if it is greater than max, make max equal to cnt. If you get a 'D' in arrival-departure array, decrement cnt by 1. At the end, return 'max'.</div>","excerpt":"At a bus-station, you have time-table for buses arrival and departure. You need to find the minimum number of platforms so that all the buses can be…","frontmatter":{"date":"06 January, 2014","path":"/blog/2014-01-06-number-of-bus-stations/","title":"[Dynamic Prog] Number Of Bus-Stations"},"fields":{"readingTime":{"text":"3 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}