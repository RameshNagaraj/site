{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2014-03-03-array-relocate-arri-arrarri/","result":{"data":{"markdownRemark":{"html":"<p>WAP to modify the array such that arr[I] = arr[arr[I]].<br>\nDo this in place i.e. with out using additional memory. </p>\n<p>example : if a = {2,3,1,0}<br>\no/p = a = {1,0,3,2} </p>\n<p>Note : The array contains 0 to n-1 integers.</p>\n<p>void relocate(int *arr,int size) {<br>\nfor(int i=0;i&#x3C;size;i++) {<br>\narr[i] += (arr[arr[i]]%size)*size;<br>\n}<br>\nfor(int i=0;i&#x3C;size;i++) {<br>\narr[i] /= size;<br>\n}<br>\n}</p>\n<p>It is simple maths:</p>\n<p>(x + y*z)/z = y provided x and y is less than z.<br>\n(x + y*z)%z = x provided x and y is less than z.<br>\nThis is the concept used here.<br>\nExample:<br>\n(3 + 4*5)/5 = 4<br>\n(3 + 4*5)%5 = 3</p>\n<p>arr[i] = arr[i] + arr[arr[i]]*size<br>\nso arr[i]/size = arr[arr[i]]</p>\n<p>In the code you see the author has used % below; this is done just to make sure arr[i] and arr[arr[i]] is less than size as explained earlier.<br>\narr[i] += (arr[arr[i]]%size)*size;</p>\n<p>When he multiplies the arr[arr[i]] by size and add the current value to it, you get a new value. This new value can use division to get the final result or modulo to obtain the current value.<br>\nWhen he does the division, the current value(remainder) just falls off and you get the final value.</p>\n<p>In the first loop, I add (size * \"OLD arr[arr[i]]\") to arr[i] so that, when doing integer division by size, I get old arr[arr[i]], when doing %size, I get old arr[i]. However I add arr[arr[i]]%size to get old arr[arr[i]], in case it was already modified in the loop. The second loop simply replaces each arr[i] with old arr[arr[i]], as mentioned above.</p>\n<p>FAQ:<br>\nDo we really need (arr[arr[i]] % size) why cant we directly put the arr[arr[i]] which i guess will yield the same result.since the values of array cannot be more than the size...<br>\n--- I think you need the %size because you can potentially retrieve the new final value from arr[arr[i]]. And that would mess up the calculation. You can try it with the input from the question:<br>\n{2,3,1,0} will become:<br>\n{1,0,3,6}</p>","excerpt":"WAP to modify the array such that arr[I] = arr[arr[I]]. Do this in place i.e. with out using additional memory.  example : if a = {2,3,1,0} o/p = a = {1,0,3,â€¦","frontmatter":{"date":"03 March, 2014","path":"/blog/2014-03-03-array-relocate-arri-arrarri/","title":"[ARRAY] Relocate arr[I] = arr[arr[I]]"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}