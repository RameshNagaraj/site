{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2015-01-01-constructing-bridges/","result":{"data":{"markdownRemark":{"html":"<p>Problem:<br>\nA River that cuts through a set of cities above and below it. Each city above the river is matched with a city below the river.<br>\nConstruct as many Non-Crossing Bridges as possible.<br>\nInput:<br>\nAbove Bank >> 7 4 3 6 2 1 5<br>\nBelow Bank >> 5 3 2 4 6 1 7<br>\nare given in pairs: (7,5) (4,3) (3,2) (6,4) (2,6) (1,1) (5,7)<br>\nOutput:<br>\n(1,1) (3,2) (4,3) (6,4) (7,5)</p>\n<p>Solution:<br>\nIts an Longest Increasing Sub-Sequence Dynamic programming Problem with O(N log N) solution.</p>\n<p>Above Bank >> 7 4 3 6 2 1 5<br>\nBelow Bank >> 5 3 2 4 6 1 7<br>\nPairs >> (7,5) (4,3) (3,2) (6,4) (2,6) (1,1) (5,7)</p>\n<p>Sort the pairs based on Lower Bank Cities as Below:<br>\nAbove Bank >> 1 3 4 6 7 2 5<br>\nBelow Bank >> 1 2 3 4 5 6 7</p>\n<p>Now the Problem reduces to finding the LIS from the Cities in Above Bank >> 1 3 4 6 7 2 5<br>\nwhich is 1 3 4 6 7</p>\n<p>So, the Output with corresponding Lower Bank Cities will be<br>\n(1,1) (3,2) (4,3) (6,4) (7,5)</p>\n<p>EDIT:<br>\nIf we have the elements sorted by their Below Bank, then we can tell if two pairs are orderable by &#x3C;=, by just looking at their positions in the Above Bank.<br>\nIf the first pair(1,1) is to the left of the second pair(3,2), we immediately know that the second elements of the first pair(1) is less than the second element of the second pair(2), since we've sorted them by the second coordinate.<br>\nWe then have this pair of elements can have Bridge built together if and only if the first element of the first pair(1) is less than the first element of the second pair(3).</p>\n<p>Consequently, if we want to find a set of Bridges that can be built together, we're looking for an Increasing Sub-Sequence of the Cities in Above Bank, since in that case both the first and second elements of the pairs are increasing as we move from the left to the right.</p>\n<p>Finding the longest increasing subsequence then solves this problem.</p>\n<p>Complexity:<br>\nSort the pairs by their Below Bank = O(N log N)<br>\nFind the LIS in O(N log N)<br>\nSo, this is an O(N log N) solution.</p>","excerpt":"Problem: A River that cuts through a set of cities above and below it. Each city above the river is matched with a city below the river. Construct as many Nonâ€¦","frontmatter":{"date":"01 January, 2015","path":"/blog/2015-01-01-constructing-bridges/","title":"Constructing Bridges"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}