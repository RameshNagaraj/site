{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2015-11-02-call-base-class-method-through-base-class-pointer-pointing-to-derived-class-2/","result":{"data":{"markdownRemark":{"html":"<p>class Base<br>\n{<br>\npublic:<br>\nvirtual void foo()<br>\n{}<br>\n};</p>\n<p>class Derived: public Base<br>\n{<br>\npublic:<br>\nvirtual void foo()<br>\n{}<br>\n};</p>\n<p>int main()<br>\n{<br>\nBase *pBase = NULL;<br>\nBase objBase;<br>\nDerived objDerived;</p>\n<p> pBase = &#x26;objDerived;<br>\npBase->foo();</p>\n<p> /*Here Derived class foo will be called, but i want this to call<br>\na base class foo. Is there any way for this to happen? i.e. through<br>\ncasting or something? */<br>\n}</p>\n<p>You can do it through scope resolution operator ::</p>\n<p>Something like this:</p>\n<p>pBase->Base::foo()</p>","excerpt":"class Base {  public:  virtual void foo()  {} }; class Derived: public Base {  public:  virtual void foo()  {} }; int main() {  Base *pBase = NULL;  Baseâ€¦","frontmatter":{"date":"02 November, 2015","path":"/blog/2015-11-02-call-base-class-method-through-base-class-pointer-pointing-to-derived-class-2/","title":"Call Base class method through base class pointer pointing to derived class"},"fields":{"readingTime":{"text":"1 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}